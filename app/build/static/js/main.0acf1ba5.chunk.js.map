{"version":3,"sources":["components/PageHeader.js","components/HomePage.js","components/LoginPage.js","components/AddReading.js","components/ViewReadingsPage.js","components/RegisterPage.js","components/ReadingPage.js","components/LogoutPage.js","components/MakeTable.js","components/MakeAverage.js","components/MakeChart.js","components/NewReading.js","components/GetDateData.js","components/MakeRangeTable.js","components/MakeRangeAverage.js","components/MakeRangeChart.js","components/GetRangeData.js","App.js","reportWebVitals.js","index.js"],"names":["PageHeader","props","sessionStorage","getItem","Navbar","fixed","expand","style","backgroundColor","NavbarBrand","className","href","Nav","navbar","to","active","Button","tag","Link","variant","color","Jumbotron","fluid","height","Container","children","NavItem","HomePage","Fragment","Row","Col","fontSize","src","class","alt","border","LoginPage","useState","username","password","formData","setFormData","errorNo","errorText","errorMsg","setErrorMsg","handleChange","e","target","name","value","handleResponse","response","status","setItem","Form","onSubmit","event","preventDefault","axios","post","then","catch","error","data","message","autoComplete","FormText","FormGroup","textAlign","id","Label","Input","autoFocus","width","placeholder","onChange","type","AddReading","reading","readingDate","readingTime","msg","setMsg","Date","dateValue","onDateChange","toTimeString","slice","timeValue","onTimeChange","md","disableClock","ViewReadingsPage","Card","CardBody","CardTitle","CardText","RegisterPage","fname","lname","email","password2","form","for","ReadingPage","LogoutPage","removeItem","MakeTable","tConv24","time24","ts","H","substr","h","ampm","console","log","Table","responsive","striped","size","bordered","ret","map","dataItem","reading_time","my_reading","MakeAverage","avg","MakeChart","options","chart","title","text","xAxis","categories","yAxis","plotOptions","series","line","dataLabels","enabled","enableMouseTracking","highcharts","Highcharts","NewReading","GetDateData","setData","isClicked","setIsClicked","moment","format","onClick","get","params","date","MakeRangeTable","reading_date","day_avg","toFixed","MakeRangeAverage","range_avg","MakeRangeChart","GetRangeData","startdate","enddate","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0acf1ba5.chunk.js","sourcesContent":["import {Jumbotron, Container, NavItem, Navbar, NavLink, NavbarBrand, Nav, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n\nfunction PageHeader(props) {\n    if (sessionStorage.getItem('isLoggedIn')) {\n        return (\n            <header>\n                <Navbar fixed expand=\"md\" style={{backgroundColor: \"lavender\"}}>\n                        <NavbarBrand className=\"text-dark\" href='/'>Glucose/A1c Tracker</NavbarBrand>\n                            <Nav className=\"mr-auto\" navbar>\n                            </Nav>\n                            <Nav>\n                                <Link to=\"/addreading\" className=\"nav-link text-dark\" active>Add Glucose Reading</Link>\n                                <Link to=\"/viewreadings\" className=\"nav-link text-dark\" active>View Readings</Link>\n                                <Button tag={Link} to=\"/logout\" className=\"mx-auto mb-3\" variant=\"outline-dark\" style={{backgroundColor: \"lavender\", color: \"black\"}}>\n                                    Log Out\n                                </Button>\n                            </Nav>\n                </Navbar>\n            \n                <Jumbotron fluid style={{backgroundColor: \"lavender\", height: \"150px\"}}>\n                    <Container fluid>\n                        <span className=\"display-4\">{props.children}</span>\n                    </Container>\n                </Jumbotron>\n            </header>\n        )\n    }\n    else {\n        return(\n        <header>\n            <Navbar fixed expand=\"md\" style={{backgroundColor: \"lavender\"}}>\n                    <NavbarBrand className=\"text-dark\" href='/'>Glucose/A1c Tracker</NavbarBrand>\n                        <Nav className=\"mr-auto container-fluid\" navbar>\n                            <NavItem className=\"ml-auto\"> \n                                {/* <Link to=\"/login\" className=\"nav-link text-dark\" active>Log In</Link> */}\n                                <Button tag={Link} to=\"/login\" className=\"mx-auto mb-3 ml-3\" variant=\"outline-dark\" style={{backgroundColor: \"lavender\", color: \"black\"}}>\n                                    Log In\n                                </Button>\n                                &nbsp;&nbsp;or&nbsp;&nbsp;\n                                <Button tag={Link} to=\"/register\" className=\"mx-auto mb-3\" variant=\"outline-dark\" style={{backgroundColor: \"lavender\", color: \"black\"}}>\n                                    Sign Up\n                                </Button>\n                            </NavItem>\n                        </Nav>\n            </Navbar>\n        \n        <Jumbotron fluid style={{backgroundColor: \"lavender\", height: \"150px\"}}>\n            <Container fluid>\n                <h1 className=\"display-3\">{props.children}</h1>\n            </Container>\n        </Jumbotron>\n    </header>\n    \n    )\n}}\n\nexport default PageHeader;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport PageHeader from './PageHeader';\n// import diabetesImage from '../public/images/diabetes.jpg';\n\nfunction HomePage(){\n    \n    return(\n        <React.Fragment>\n        <PageHeader>\n            Welcome\n        </ PageHeader>\n            <Container fixed>\n                <Row>\n                    <Col>\n                        <p style={{fontSize: \"20px\"}}>For someone with diabetes, there are two numbers that you must know:  your average glucose and your A1C.  \n                        This site will help you keep track of both.  Simply log in (after you create an account) and you can enter your daily \n                        glucose readings and generate a visual representation of your daily readings.  For a broader look at your daily patterns, \n                        specify a date range and you will see your average reading for each day in the range along with a visual representation.</p>\n                        <br />\n                        <p style={{fontSize: \"20px\"}}><u>Important</u>:  The information displayed here is for informational purposes only.  Consult with your physician before \n                        making any changes in your treatment.</p>\n                    </Col>\n                    <Col>\n                        <img src = 'images/diabetes.jpg' class=\"img-thumbnail\" alt=\"Syringe\" style={{border: 'none'}}/>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default HomePage;","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, FormText, Button, Container, Row } from 'reactstrap';\nimport axios from 'axios';\nimport PageHeader from './PageHeader';\n\nfunction LoginPage() {\n\n    const [formData, setFormData] = useState({\n        username: '',\n        password: ''\n    });\n\n    const [errorMsg, setErrorMsg] = useState({\n        errorNo: '',\n        errorText: ''\n    })\n    \n    function handleChange(e) {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n          });\n      }\n      function handleResponse(response) {\n            if (response.status === 200)\n                sessionStorage.setItem('isLoggedIn', 'True');\n                sessionStorage.setItem('username', formData.username);\n            setFormData({\n                username: '',\n                password: ''\n            });\n      }\n\n      function handleSubmit(event) {\n        event.preventDefault();\n        // const username = formData.username\n        // const password = formData.password\n        axios.post('/login', {\n            username: formData.username,\n            password: formData.password,\n          })\n          .then(handleResponse)\n          .catch(error => {\n              setErrorMsg({\n                  errorNo: error.response.status,\n                  errorText: error.response.data.message\n              });\n          })\n        }\n          \n    if (sessionStorage.getItem('isLoggedIn')) {\n        return (\n            <Redirect to='/readingpage' />\n        )\n    }\n    return (\n      <React.Fragment>\n        <PageHeader>\n            Welcome\n        </PageHeader>\n        <Container  className=\"mt-5 w-25 p-3 mr-3px\">\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n            <FormText>\n                <h3 style={{color: 'red'}}>{errorMsg.errorText}</h3>\n            </FormText>\n            <FormGroup style={{textAlign: \"left\"}} id=\"username\">\n                <Label>Username</Label>\n                <Input autoFocus={true} style={{width: \"95%\"}} placeholder=\"Enter username\" name=\"username\" value={formData.username} onChange={handleChange}/>\n            </FormGroup>\n\n            <FormGroup style={{textAlign: \"left\"}} id=\"password\">\n                <Label>Password</Label>\n                <Input style={{width: \"95%\"}} type=\"password\" placeholder=\"Password\" name=\"password\" value={formData.password} onChange={handleChange} />\n            </FormGroup>\n            <Row>\n            <Button className=\"mx-auto mb-3\" variant=\"outline-dark\" style={{backgroundColor: \"lavender\", color: \"black\"}} type=\"submit\">\n                Submit\n            </Button>\n            </Row>\n            <FormText className=\"text-muted\">\n                Don't have an Account?  Click <a href=\"/register\" active>here</a> to sign up.\n            </FormText>\n        </Form>\n        </Container>\n        </React.Fragment>\n    )\n}\n\nexport default LoginPage;","import React, { useState } from \"react\";\nimport {\n    Form,\n    FormText,\n    FormGroup,\n    Label,\n    Input,\n    Button,\n    Container,\n    Row,\n    Col,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport DatePicker from \"react-date-picker\";\nimport TimePicker from \"react-time-picker\";\nimport PageHeader from \"./PageHeader\";\n\nfunction AddReading() {\n    const [formData, setFormData] = useState({\n        reading: \"\",\n        readingDate: \"\",\n        readingTime: \"\",\n    });\n\n    const [errorMsg, setErrorMsg] = useState({\n        errorNo: \"\",\n        errorText: \"\",\n    });\n\n    const [msg, setMsg] = useState(\"\");\n\n    const [dateValue, onDateChange] = useState(new Date());\n\n    // const [timeValue, onTimeChange] = useState('10:00 AM');\n    const [timeValue, onTimeChange] = useState(\n        new Date().toTimeString().slice(0, 5)\n    );\n\n    const username = sessionStorage.getItem(\"username\");\n\n    function handleChange(e) {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value,\n        });\n    }\n    function handleResponse() {\n        setMsg(\"Reading Added\");\n        setFormData({\n            reading: \"\",\n            readingDate: \"\",\n        });\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setErrorMsg({\n            errorNo: \"\",\n            errorText: \"\",\n        });\n        axios\n            .post(\"/addreading\", {\n                username: username,\n                reading: formData.reading,\n                readingDate: dateValue,\n                readingTime: timeValue,\n            })\n            .then(handleResponse)\n            .catch((error) => {\n                setErrorMsg({\n                    errorNo: error.response.status,\n                    errorText: error.response.data.message,\n                });\n            });\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>Add Glucose Readings</PageHeader>\n            <Container fluid className=\"mt-5 w-25 p-3 mr-3px ml-0px\">\n                <Form onSubmit={handleSubmit} autoComplete=\"off\">\n                    <FormText>\n                        <h3 style={{ color: \"red\" }}>{errorMsg.errorText}</h3>\n                    </FormText>\n                    <FormText>\n                        <h3 style={{ color: \"green\" }}>{msg}</h3>\n                    </FormText>\n                    <FormGroup style={{ textAlign: \"left\" }} id=\"reading\">\n                        <Label>Reading</Label>\n                        <Input\n                            autoFocus={true}\n                            style={{ width: \"95%\" }}\n                            placeholder=\"Glucose Reading\"\n                            name=\"reading\"\n                            value={formData.reading}\n                            onChange={handleChange}\n                        />\n                    </FormGroup>\n                    <Row>\n                        <Col md={5}>\n                            <Label>Reading Date</Label> <br />\n                            <DatePicker\n                                onChange={onDateChange}\n                                value={dateValue}\n                            />\n                        </Col>\n                        <Col md={1}></Col>\n                        <Col md={5}>\n                            <Label>Reading Time</Label> <br />\n                            <TimePicker\n                                onChange={onTimeChange}\n                                value={timeValue}\n                                disableClock={true}\n                            />\n                        </Col>\n                    </Row>\n                    <br />\n                    <Row>\n                        <Button\n                            className=\"mx-auto mb-3\"\n                            variant=\"outline-dark\"\n                            style={{\n                                backgroundColor: \"lavender\",\n                                color: \"black\",\n                            }}\n                            type=\"submit\"\n                        >\n                            Submit\n                        </Button>\n                    </Row>\n                </Form>\n            </Container>\n        </React.Fragment>\n    );\n}\n\nexport default AddReading;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardText,\n  CardBody,\n  CardTitle\n} from \"reactstrap\";\nimport PageHeader from \"./PageHeader\";\n\nfunction ViewReadingsPage() {\n\n  return (\n    <React.Fragment>\n      <PageHeader>Display Glucose Readings</PageHeader>\n      <Container>\n        <Row>\n          <Col>\n            <Card>\n              <CardBody>\n                <CardTitle tag=\"h5\">View Single Day</CardTitle>\n                <CardText>\n                  View glucose readings from a single day. This options displays\n                  a table of readings and a graph of your readings from the\n                  selected day.\n                  <br />\n                  <br />\n                  <br />\n                </CardText>\n              </CardBody>\n              <Link\n                to=\"/getdatedata\"\n                className=\"btn btn-primary mx-auto mb-3\"\n                variant=\"outline-dark\"\n                style={{ backgroundColor: \"lavender\", color: \"black\" }}\n              >Select Date\n              </Link>\n            </Card>\n          </Col>\n          <Col>\n            <Card>\n              <CardBody>\n                <CardTitle tag=\"h5\">Display Date Range</CardTitle>\n                <CardText>\n                  View glucose readings from a selected date range. This option\n                  displays a table showing your average glucose reading for each\n                  day in the selected range and a graph of these averages. In\n                  addition, the approximate A1C value computed from the selected\n                  range will be displayed.\n                </CardText>\n              </CardBody>\n              <Link\n                to=\"/getrangedata\"\n                className=\"btn btn-primary mx-auto mb-3\"\n                variant=\"outline-dark\"\n                style={{ backgroundColor: \"lavender\", color: \"black\" }}\n              >Select Date Range\n              </Link>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default ViewReadingsPage;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, FormText, Button, Container, Row, Col } from 'reactstrap';\nimport axios from 'axios';\nimport PageHeader from './PageHeader';\n\nfunction RegisterPage() {\n\n    const [formData, setFormData] = useState({\n        fname: '',\n        lname: '',\n        email: '',\n        username: '',\n        password: '',\n        password2: ''\n    });\n\n    const [errorMsg, setErrorMsg] = useState({\n        errorNo: '',\n        errorText: ''\n    })\n    \n    function handleChange(e) {\n        setFormData({\n            ...formData,\n            [e.target.name]: e.target.value\n          });\n      }\n      function handleResponse(response) {\n            if (response.status === 200)\n                sessionStorage.setItem('isLoggedIn', 'True');\n                sessionStorage.setItem('username', formData.username);\n            setFormData({\n                fname: '',\n                lname: '',\n                email: '',\n                username: '',\n                password: '',\n                password2: ''\n            });\n      }\n\n      function handleSubmit(event) {\n        event.preventDefault();\n        axios.post('/register', {\n            fname: formData.fname,\n            lname: formData.lname,\n            email: formData.email,\n            username: formData.username,\n            password: formData.password,\n            password2: formData.password2\n          })\n          .then(handleResponse)\n          .catch(error => {\n              setErrorMsg({\n                  errorNo: error.response.status,\n                  errorText: error.response.data.message\n              });\n          })\n        }\n\n        if (sessionStorage.getItem('isLoggedIn')) {\n            return (\n                <Redirect to='/readingpage' />\n            )\n        }\n          \n    return (\n        <React.Fragment>\n        <PageHeader>\n            Sign Up\n        </PageHeader>\n        <Container  className=\"mt-5 w-25 p-3 mr-3px\">\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n            <FormText>\n                <h3 style={{color: 'red'}}>{errorMsg.errorText}</h3>\n            </FormText>\n            <Row form>\n                <Col md={6}>\n                <FormGroup>\n                    <Label for=\"fname\">First Name</Label>\n                    <Input type=\"text\" name=\"fname\" id=\"fname\" value={formData.fname} onChange={handleChange}/>\n                </FormGroup>\n                </Col>\n                <Col md={6}>\n                <FormGroup>\n                    <Label for=\"lname\">Last Name</Label>\n                    <Input type=\"text\" name=\"lname\" id=\"lname\" value={formData.lname} onChange={handleChange}/>\n                </FormGroup>\n                </Col>\n            </Row>   \n            <Row form>\n                <Col>\n                    <FormGroup>\n                        <Label for=\"email\">Email Address</Label>\n                        <Input type=\"email\" name=\"email\" id=\"email\" value={formData.email} onChange={handleChange}/>\n                    </FormGroup>\n                </Col>\n            </Row>\n            <Row form>\n                <Col>\n                <FormGroup>\n                    <Label for=\"username\">Username</Label>\n                    <Input type=\"text\" name=\"username\" id=\"username\" value={formData.username} onChange={handleChange}/>\n                </FormGroup>\n                </Col>\n             </Row>\n             <Row form>\n                <Col md={6}>\n                <FormGroup>\n                    <Label for=\"password\">Password</Label>\n                    <Input type=\"password\" name=\"password\" id=\"password\" value={formData.password} onChange={handleChange}/>\n                </FormGroup>\n                </Col>\n                <Col md={6}>\n                <FormGroup>\n                    <Label for=\"password2\">Verify Password</Label>\n                    <Input type=\"password\" name=\"password2\" id=\"password2\" value={formData.password2} onChange={handleChange}/>\n                </FormGroup>\n                </Col>\n            </Row>   \n            <Row>\n                <Button className=\"mx-auto mb-3\" variant=\"outline-dark\" style={{backgroundColor: \"lavender\", color: \"black\"}} type=\"submit\">\n                    Sign Up\n                </Button>\n            </Row>\n        </Form>\n        </Container>\n        </React.Fragment>\n    )\n}\n\nexport default RegisterPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Card, CardText, CardBody, CardTitle } from 'reactstrap';\nimport PageHeader from './PageHeader';\n\nfunction ReadingPage() {\n\nreturn (\n    <React.Fragment>\n    <PageHeader>\n            Glucose Readings\n        </PageHeader>\n        <Container>\n            <Row>\n                <Col>\n                    <Card>\n                        <CardBody>\n                            <CardTitle tag=\"h5\">Add Reading</CardTitle>\n                            <CardText>Add glucose readings to the database</CardText>\n                            {/* <Button className=\"btn btn-primary mx-auto mb-3\" variant=\"outline-dark\" style={{backgroundColor: \"lavender\", color: \"black\"}} onClick={routeAdd}>Add</Button> */}\n                            </CardBody>\n                            <Link\n                                to=\"/addreading\"\n                                className=\"btn btn-primary mx-auto mb-3\"\n                                variant=\"outline-dark\"\n                                style={{ backgroundColor: \"lavender\", color: \"black\" }}\n                                >Select Date\n                            </Link>\n                    </Card>\n                </Col>\n                <Col>\n                    <Card>\n                        <CardBody>\n                            <CardTitle tag=\"h5\">Display Readings</CardTitle>\n                            <CardText>Display readings from the database</CardText>\n                            {/* <Button className=\"btn btn-primary mx-auto mb-3\" variant=\"outline-dark\" style={{backgroundColor: \"lavender\", color: \"black\"}} onClick={routeDisplay}>Display</Button> */}\n                        </CardBody>\n                            <Link\n                                to=\"/viewreadings\"\n                                className=\"btn btn-primary mx-auto mb-3\"\n                                variant=\"outline-dark\"\n                                style={{ backgroundColor: \"lavender\", color: \"black\" }}\n                                >Select Date\n                            </Link>\n                    </Card>\n                </Col>\n            </Row>\n      </Container>\n    </React.Fragment>\n    )\n}\n\nexport default ReadingPage;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nfunction LogoutPage() {\n    sessionStorage.removeItem('isLoggedIn');\n    sessionStorage.removeItem('username');\n\n    return(    \n        <Redirect to='/' />\n    )\n}\n\nexport default LogoutPage;","import React from 'react';\nimport { Table } from \"reactstrap\";\n\nfunction MakeTable (props) {\n\n    function tConv24(time24) {\n        var ts = time24;\n        var H = +ts.substr(0, 2);\n        var h = (H % 12) || 12;\n        h = (h < 10)?(\"0\"+h):h;  // leading 0 at the left for 1 digit hours\n        var ampm = H < 12 ? \" AM\" : \" PM\";\n        ts = h + ts.substr(2, 3) + ampm;\n        return ts;\n      };\n\n    return (\n        <React.Fragment>\n            {console.log(props)}\n                <Table responsive striped size='sm' bordered id='readingTable'>\n                    <thead>\n                        <tr>\n                            <th style={{textAlign: 'center'}}>\n                                Reading Time\n                            </th>\n                            <th style={{textAlign: 'center'}}>\n                                Reading\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.data.ret.map(dataItem => \n                        <tr>\n                            <td style={{textAlign: 'center'}}>{tConv24(dataItem.reading_time)}</td>\n                            <td style={{textAlign: 'center'}}>{dataItem.my_reading}</td>\n                        </tr>\n                        )\n                        }\n                    </tbody>\n                </Table>\n        </React.Fragment>\n    );\n}\n\nexport default MakeTable;","import React from 'react';\n\nfunction MakeAverage(props) {\n\n    return(\n        <React.Fragment>\n            Average Glucose: {props.data.avg}\n            \n        </React.Fragment>\n    )\n}\n\nexport default MakeAverage;","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nfunction MakeChart(props) {\n\n    function tConv24(time24) {\n        var ts = time24;\n        var H = +ts.substr(0, 2);\n        var h = (H % 12) || 12;\n        h = (h < 10)?(\"0\"+h):h;  // leading 0 at the left for 1 digit hours\n        var ampm = H < 12 ? \" AM\" : \" PM\";\n        ts = h + ts.substr(2, 3) + ampm;\n        return ts;\n      };\n\n\n    const options = {\n        chart: {\n          type: \"spline\"\n        },\n        title: {\n          text: \"Glucose Readings\"\n        },\n        xAxis: {\n          categories: \n            props.data.ret.map(dataItem => \n              tConv24(dataItem.reading_time))\n          \n        },\n        yAxis: {\n          title: {\n            text: \"Glucose\"\n          }\n        },\n        plotOptions: {\n          series: {\n            color: 'purple'\n        },\n          line: {\n            dataLabels: {\n              enabled: true\n            },\n            enableMouseTracking: false\n          },\n        },\n        series: [\n          {\n            name: \"Daily Readings\",\n            data: props.data.ret.map(dataItem => \n              dataItem.my_reading)\n          }\n        ]\n      };\n\n    return (\n        <React.Fragment>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n        </React.Fragment>\n    )\n}\n\n\n\n\nexport default MakeChart;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction NewReading() {\n    return (\n    <Link\n        to=\"/viewreadings\"\n        className=\"btn btn-primary mx-auto mb-3\"\n        variant=\"outline-dark\"\n        style={{ backgroundColor: \"lavender\", color: \"black\" }}\n        >Display Another Reading\n    </Link>\n    )\n    }\n\nexport default NewReading;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport DatePicker from \"react-date-picker\";\nimport PageHeader from './PageHeader';\nimport MakeTable from './MakeTable';\nimport MakeAverage from './MakeAverage';\nimport MakeChart from './MakeChart';\nimport NewReading from './NewReading';\n\nfunction GetDateData () {\n\n    const [dateValue, onDateChange] = useState(new Date());\n\n    const [data, setData] = useState({\n        ret: [],\n        avg: 0\n    });\n\n    const [isClicked, setIsClicked] = useState(false);\n\n    const [errorMsg, setErrorMsg] = useState({\n        errorNo: '',\n        errorText: ''\n    })\n\n    const username = sessionStorage.getItem('username')\n\n    function handleResponse(response) {\n        // setErrorMsg({\n        //     errorNo: '',\n        //     errorText: ''\n        // });\n        setData(response.data)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setIsClicked(true);\n        axios.get('/getdatedata', {\n            params: {\n                username: username,\n                date: dateValue \n            }\n          })\n          .then(handleResponse)\n          .catch(error => {\n              setErrorMsg({\n                  errorNo: error.response.status,\n                  errorText: error.response.data.message\n              });\n          })\n        }\n        \n        if(isClicked) {\n            return(\n                <React.Fragment>\n\n                    <PageHeader>Glucose Readings for {moment(dateValue).format('MM/DD/YYYY')}</PageHeader>\n                <Container>\n                    <h3 style={{ color: \"red\", textAlign: \"center\" }}>{errorMsg.errorText}</h3>\n                    <Row>\n                        <Col md={4}></Col>\n                        <Col md={3}>\n                            <MakeTable data={data} />\n                        </Col>\n                        <Col md={4}>\n                            <MakeAverage data={data} /><br />\n                            <NewReading />\n                        </Col>\n                        <Col md={4}></Col>\n                        </Row>\n                        </Container>\n                        <Container>\n                            <Row>\n                                <Col md={2}></Col>\n                                <Col>\n                                    <MakeChart data={data} />\n                                </Col>\n                                <Col md={2}></Col>\n                            </Row>\n                        </Container>\n                        \n            </React.Fragment>\n            )\n        }\n    return (\n        <React.Fragment>\n            <PageHeader>Glucose Readings</PageHeader>\n                <Container>\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}><h3 style={{ color: \"red\" }}>{errorMsg.errorText}</h3></Col>\n                        <Col></Col>\n                    </Row>\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}>\n                        \n                            Choose Date:<br />\n                            <DatePicker onChange={onDateChange} value={dateValue} />\n                        </Col>\n                        <Col>\n                        </Col>\n                    </Row>\n                <br />\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}>\n                            <Button\n                                    className=\"mx-auto mb-3\"\n                                    variant=\"outline-dark\"\n                                    style={{ backgroundColor: \"lavender\", color: \"black\" }}\n                                    type=\"submit\"\n                                    onClick={handleSubmit}\n                                >\n                                    Get Reading Data\n                                </Button>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n    </React.Fragment>\n    );\n}\n\nexport default GetDateData;","import React from 'react';\nimport { Table } from \"reactstrap\";\n\nfunction MakeRangeTable (props) {\n\n    return (\n        <React.Fragment>\n                <Table striped size='sm' bordered id='readingTable'>\n                    <thead>\n                        <tr>\n                            <th style={{textAlign: 'center'}}>\n                                Reading Date\n                            </th>\n                            <th style={{textAlign: 'center'}}>\n                                Average Reading\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.data.ret.map(dataItem => \n                        <tr>\n                            <td style={{textAlign: 'center'}}>{dataItem.reading_date}</td>\n                            <td style={{textAlign: 'center'}}>{dataItem.day_avg.toFixed(2)}</td>\n                        </tr>\n                        )\n                        }\n                    </tbody>\n                </Table>\n        </React.Fragment>\n    );\n}\n\nexport default MakeRangeTable;","import React from 'react';\n\nfunction MakeRangeAverage(props) {\n\n    function calcA1C() {\n        return ((46.7 + props.data.range_avg) / 28.7).toFixed(2);\n    }\n\n    return(\n        <React.Fragment>\n            Average Glucose: {props.data.range_avg} <br />\n            Approx. A1C: {calcA1C()}\n        </React.Fragment>\n    )\n}\n\nexport default MakeRangeAverage;","import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nfunction MakeRangeChart(props) {\n\n    const options = {\n        chart: {\n          type: \"spline\"\n        },\n        title: {\n          text: \"Glucose Readings\"\n        },\n        xAxis: {\n          categories: \n            props.data.ret.map(dataItem => \n              dataItem.reading_date)\n          \n        },\n        yAxis: {\n          title: {\n            text: \"Glucose\"\n          }\n        },\n        plotOptions: {\n          series: {\n            color: 'purple'\n        },\n          line: {\n            dataLabels: {\n              enabled: true\n            },\n            enableMouseTracking: false\n          },\n        },\n        series: [\n          {\n            name: \"Daily Readings\",\n            data: props.data.ret.map(dataItem => \n              dataItem.day_avg)\n          }\n        ]\n      };\n\n    return (\n        <React.Fragment>\n            <HighchartsReact highcharts={Highcharts} options={options} />\n        </React.Fragment>\n    )\n}\n\n\n\n\nexport default MakeRangeChart;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Container, Row, Col, Button } from \"reactstrap\";\nimport DateRangePicker from '@wojtekmaj/react-daterange-picker'\nimport PageHeader from './PageHeader';\nimport MakeRangeTable from './MakeRangeTable';\nimport MakeRangeAverage from './MakeRangeAverage';\nimport MakeRangeChart from './MakeRangeChart';\nimport NewReading from './NewReading';\n\nfunction GetRangeData () {\n\n    const [dateValue, onDateChange] = useState([new Date(), new Date()]);\n\n    const [data, setData] = useState({\n        ret: [],\n        day_avg: 0\n    });\n    \n    const [isClicked, setIsClicked] = useState(false);\n\n    const [errorMsg, setErrorMsg] = useState({\n        errorNo: '',\n        errorText: ''\n    })\n\n    const username = sessionStorage.getItem(\"username\")\n\n    function handleResponse(response) {\n        setData(response.data)\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setIsClicked(true);\n        axios.get('/getrangedata', {\n            params: {\n            username: username,\n            startdate: dateValue[0],\n            enddate: dateValue[1]\n            }\n          })\n          .then(handleResponse)\n          .catch(error => {\n            setErrorMsg({\n                errorNo: error.response.status,\n                errorText: error.response.data.message\n            });\n        })\n      }\n\n        if(isClicked) {\n            return(\n                <React.Fragment>\n                    <PageHeader>Glucose Readings for {moment(dateValue[0]).format('MM/DD/YYYY')} - {moment(dateValue[1]).format('MM/DD/YYYY')}</PageHeader>\n                <Container>\n                    <h3 style={{ color: \"red\", textAlign: \"center\" }}>{errorMsg.errorText}</h3>\n                    <Row>\n                        <Col></Col>\n                        <Col>\n                            {console.log(data)}\n                            <MakeRangeTable data={data} />\n                        </Col>\n                        <Col>\n                            <MakeRangeAverage data={data} />\n                            <br />\n                            <NewReading />\n                        </Col>\n                        </Row>\n                        </Container>\n                        <MakeRangeChart data={data} />\n            </React.Fragment>\n            )\n        }\n    return (\n        <React.Fragment>\n            <PageHeader>Glucose Readings</PageHeader>\n                <Container>\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}><h3 style={{ color: \"red\" }}>{errorMsg.errorText}</h3></Col>\n                        <Col></Col>\n                    </Row>\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}>\n                        \n                            Choose Date:<br />\n                            <DateRangePicker onChange={onDateChange} value={dateValue} />\n                        </Col>\n                        <Col>\n                        </Col>\n                    </Row>\n                <br />\n                    <Row>\n                        <Col></Col>\n                        <Col md={4}>\n                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                            <Button\n                                    size = \"md\"\n                                    className=\"mx-auto mb-3\"\n                                    variant=\"outline-dark\"\n                                    style={{ backgroundColor: \"lavender\", color: \"black\" }}\n                                    type=\"submit\"\n                                    onClick={handleSubmit}\n                                >\n                                    Get Reading Data\n                                </Button>\n                        </Col>\n                        <Col></Col>\n                    </Row>\n                </Container>\n    </React.Fragment>\n    );\n}\n\nexport default GetRangeData;","import React from 'react';\nimport HomePage from './components/HomePage';\nimport LoginPage from './components/LoginPage';\nimport AddReading from './components/AddReading';\nimport ViewReadingsPage from './components/ViewReadingsPage';\nimport RegisterPage from './components/RegisterPage';\nimport ReadingPage from './components/ReadingPage';\nimport LogoutPage from './components/LogoutPage';\nimport GetDateData from './components/GetDateData';\nimport GetRangeData from './components/GetRangeData';\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <main>\n      <Switch>\n        <Route path=\"/\" component={HomePage} exact />\n        <Route path=\"/addreading\" component={AddReading} exact />\n        <Route path=\"/viewreadings\" component={ViewReadingsPage} exact />\n        <Route path=\"/login\" component={LoginPage} exact />\n        <Route path=\"/register\" component={RegisterPage} exact />\n        <Route path=\"/readingpage\" component={ReadingPage} exact />\n        <Route path=\"/logout\" component={LogoutPage} exact />\n        <Route path=\"/getdatedata\" component={GetDateData} exact />\n        <Route path=\"/getrangedata\" component={GetRangeData} exact />\n      </Switch>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}